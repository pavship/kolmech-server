type User {
	id: ID! @unique
	email: String! @unique
	password: String!
	person: Person
	role: UserRole
	events: [Event!]! @relation(name: "EventByUser")
}

type Person {
	id: ID! @unique
	fName: String!
	lName: String
	user: User
}

type Org {
	id: ID! @unique
	inn: String @unique
	moedeloId: String
	name: String!
	legalAddress: String
	enquiries: [Enquiry!]! @relation(name: "OrgEnquiries")
	orders: [Order!]! @relation(name: "OrgOrders")
}

type Enquiry {
	id: ID! @unique
	num: Int!
	dateLocal: String
	org: Org @relation(name: "OrgEnquiries")
	model: Model @relation(name: "EnquiryModel")
	qty: Int
	htmlNote: String
	events: [Event!]! @relation(name: "EventOnEnquiry" onDelete: CASCADE)
	orders: [Order!]!  @relation(name: "EnquiryOrders")
}

type Event {
	id: ID! @unique
	user: User @relation(name: "EventByUser")
	enquiry: Enquiry @relation(name: "EventOnEnquiry")
	order: Order @relation(name: "OrderEvents")
	datetimeLocal: String!
	htmlText: String
	type: EventType
	status: Status
	doc: Doc @relation(name: "EventDoc" onDelete: CASCADE)
}

type Doc {
	id: ID! @unique
	dateLocal: String
	amount: Float
	nds: Boolean
	type: DocType
}

type Status {
	id: ID! @unique
	name: String! @unique
	stage: Int
	prev: [Status!]! @relation(name: "StatusLink")
	next: [Status!]! @relation(name: "StatusLink")
}

type Order {
	id: ID! @unique
	num: Int
	dateLocal: String
	qty: Int
	amount: Float
	htmlNote: String
	enquiry: Enquiry @relation(name: "EnquiryOrders")
	org: Org @relation(name: "OrgOrders")
	model: Model @relation(name: "ModelOrders")
	events: [Event!]! @relation(name: "OrderEvents" onDelete: CASCADE)
}

type Model {
	id: ID! @unique
	gqId: ID @unique #Graphcool id
	article: String
	name: String! @unique
	enquiries: [Enquiry!]! @relation(name: "EnquiryModel")
	orders: [Order!]! @relation(name: "ModelOrders")
#   prods: [Prod!]! @relation(name: "ModelOnProd")
#   deptModels: [DeptModel!]! @relation(name: "ModelOnDeptModel")
}

# type Prod {
#   id: ID! @unique
#   dept: Dept! @relation(name: "DeptOnProd")
#   deptModel: DeptModel @relation(name: "DeptModelOnProd")
#   fullnumber: String
#   hasDefect: Boolean
#   isSpoiled: Boolean
#   melt: Int!
#   meltShift: Int
#   model: Model! @relation(name: "ModelOnProd")
#   note: String
#   number: Int!
#   progress: Float
#   updTrigger: Boolean
#   updatedAt: DateTime!
#   year: Int!
# }

enum EventType {
	CREATE
	UPDATE
	STATUS
	COMMENT
}

enum DocType {
	CO
}

enum UserRole {
	INACTIVE
}