type User {
    id: ID! @unique
    email: String! @unique
    password: String!
    person: Person
    role: UserRole
    events: [Event!]! @relation(name: "EventByUser")
}

type Person {
    id: ID! @unique
    fName: String!
    lName: String
    user: User
}

type Org {
    id: ID! @unique
    inn: String @unique
    moedeloId: String
    name: String!
    legalAddress: String
    enquiries: [Enquiry!]!
}

type Enquiry {
    id: ID! @unique
    num: Int!
    dateLocal: String
    org: Org
    events: [Event!]! @relation(name: "EventOnEnquiry" onDelete: CASCADE)
}

type Event {
    id: ID! @unique
    user: User @relation(name: "EventByUser" onDelete: SET_NULL)
    enquiry: Enquiry @relation(name: "EventOnEnquiry")
    datetimeLocal: String!
    text: String
    htmlText: String
    type: EventType
    status: Status
}

type Status {
    id: ID! @unique
    name: String!
    stage: Int
    prev: [Status!]! @relation(name: "StatusLink")
    next: [Status!]! @relation(name: "StatusLink")
}

enum EventType {
    CREATE
    UPDATE
    STATUS
    COMMENT
}

enum UserRole {
    INACTIVE
}